//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace DataAccess
{
    public partial class Product
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get;
            set;
        }
    
        public virtual string ProductName
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SupplierID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CategoryID
        {
            get { return _categoryID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_categoryID != value)
                    {
                        if (Category != null && Category.CategoryID != value)
                        {
                            Category = null;
                        }
                        _categoryID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _categoryID;
    
        public virtual string QuantityPerUnit
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> UnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsInStock
        {
            get;
            set;
        }
    
        public virtual Nullable<short> UnitsOnOrder
        {
            get;
            set;
        }
    
        public virtual Nullable<short> ReorderLevel
        {
            get;
            set;
        }
    
        public virtual bool Discontinued
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Category Category
        {
            get { return _category; }
            set
            {
                if (!ReferenceEquals(_category, value))
                {
                    var previousValue = _category;
                    _category = value;
                    FixupCategory(previousValue);
                }
            }
        }
        private Category _category;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCategory(Category previousValue)
        {
            if (previousValue != null && previousValue.Products.Contains(this))
            {
                previousValue.Products.Remove(this);
            }
    
            if (Category != null)
            {
                if (!Category.Products.Contains(this))
                {
                    Category.Products.Add(this);
                }
                if (CategoryID != Category.CategoryID)
                {
                    CategoryID = Category.CategoryID;
                }
            }
            else if (!_settingFK)
            {
                CategoryID = null;
            }
        }

        #endregion
    }
}
